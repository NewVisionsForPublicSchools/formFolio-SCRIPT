function formFolio_whatIs() {
  var imageId = '0B2vrNcqyzernemxLVlVWTndYQTA';
  var url = 'https://drive.google.com/uc?export=download&id='+waitingIconId;
  var app = UiApp.createApplication().setHeight(550);
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var panel = app.createVerticalPanel();
  var octiGrid = app.createGrid(1, 2);
  var image = app.createImage(url);
  image.setHeight("100px");
  var label = app.createLabel("formFolio: Accept and auto-organize Drive resources into folders using a Google Form");
  label.setStyleAttribute('fontSize', '1.5em').setStyleAttribute('fontWeight', 'bold');
  octiGrid.setWidget(0, 0, image);
  octiGrid.setWidget(0, 1, label);
  var mainGrid = app.createGrid(4, 1);
  var scrollPanel = app.createScrollPanel().setHeight("250px").setStyleAttribute("backgroundColor","whiteSmoke").setStyleAttribute('padding', '10px');
  var html = "<h3>Features</h3>";
  html += "<li>Turns a Google Form into a smart auto-foldering and \'dropbox\' tool to allow users to submit any Drive-hosted resource along with additional data.</li>";
  html += "<li>Great for auto-organizing and managing ownership of student or teacher artifact submissions.  Can function like a dropbox, allowing users to add or copy Drive resources via form to folders they otherwise cannot access.</li>";
  html += "<li>Ideal for large collaboration groups looking to crowdsource, organize and tag Drive resources in specific ways without giving everyone edit privileges on the folder structure.</li>";
  html += "<li>For secure Google Forms on a Google Apps domain, allows Drive resources to be submitted to individual \"User Folders\" based on the auto-collected username.</li>";
  html += "<li>Allows the choices in one or more of your multiple-choice, list, or checkbox questions to correspond to destination Folders in Drive.</li>";
  html += "<li>Uses a text type question in your form to collect the Drive resource URL (Documents, Sheets, Presentations, Drawings, Folders--yes whole Folders (up to 2 levels deep), Images, heck, even unconverted Office files) from users.";
  html += "<li>Upon form submission, adds or copies (see modes below) the submitted Drive resource into the corresponding folders in your Drive.</li>";
  html += "<li>Requires you to collect the form submitter's Google email address via secure (domain) form or via a text question in your form.  The script detects whether sharing permissions are appropriate and emails the user with steps and easy links to fix.";
  html += "<li>Can be run in \"original\" or \"copy\" mode.";
  html += "<ul><li><strong>Original mode</strong> adds the Drive resources to the designated folder(s) and preserves their original ownership.</li>";
  html += "<li><strong>Copy mode</strong> makes a copy of the Drive resource, renames it according to a convention of your choice, optionally shares in the submitter as viewer, editor, or commenter, and moves it to the designated folders.</li></ul></li>";
  html += "<li><strong>When set to create \"User Folders\" on a secure, domain Google Form...</strong>";
  html += "<ul><li>Can auto-create folders for new users upon form submission</li>";
  html += "<li>Allows for user folder to be restricted, or shared with either view or edit privileges</li></ul></li>";
  html += "</ul>";
  scrollPanel.add(app.createHTML(html));
  mainGrid.setWidget(0, 0, scrollPanel);
  var sponsorLabel = app.createLabel("Brought to you by");
  var sponsorImage = app.createImage("http://www.youpd.org/sites/default/files/acquia_commons_logo36.png");
 // var supportLink = app.createAnchor('Watch the tutorial!', 'http://www.youpd.org/formfolio');  //Coming soon
  mainGrid.setWidget(1, 0, sponsorLabel);
  mainGrid.setWidget(2, 0, sponsorImage);
 // mainGrid.setWidget(3, 0, supportLink);
  app.add(octiGrid);
  panel.add(mainGrid);
  app.add(panel);
  ss.show(app);
  return app;                                                                    
}
